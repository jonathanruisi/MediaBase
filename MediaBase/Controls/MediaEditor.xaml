<UserControl
    x:Class="MediaBase.Controls.MediaEditor"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:xaml="using:Microsoft.UI.Xaml"
    xmlns:win2d="using:Microsoft.Graphics.Canvas.UI.Xaml"
    xmlns:toolkit_converters="using:CommunityToolkit.WinUI.UI.Converters"
    xmlns:controls="using:JLR.Utility.WinUI.Controls"
    xmlns:viewmodel="using:MediaBase.ViewModel"
    Loaded="UserControl_Loaded"
    Unloaded="UserControl_Unloaded">

    <UserControl.Resources>
        <!-- Value Converters -->
        <toolkit_converters:EmptyObjectToObjectConverter x:Key="ObjectToVisibilityConverter">
            <toolkit_converters:EmptyObjectToObjectConverter.EmptyValue>
                <xaml:Visibility>Collapsed</xaml:Visibility>
            </toolkit_converters:EmptyObjectToObjectConverter.EmptyValue>
            <toolkit_converters:EmptyObjectToObjectConverter.NotEmptyValue>
                <xaml:Visibility>Visible</xaml:Visibility>
            </toolkit_converters:EmptyObjectToObjectConverter.NotEmptyValue>
        </toolkit_converters:EmptyObjectToObjectConverter>

        <toolkit_converters:DoubleToVisibilityConverter x:Key="GreaterThanZeroToVisibilityConverter">
            <toolkit_converters:DoubleToVisibilityConverter.GreaterThan>
                0.0
            </toolkit_converters:DoubleToVisibilityConverter.GreaterThan>
            <toolkit_converters:DoubleToVisibilityConverter.TrueValue>
                <xaml:Visibility>Visible</xaml:Visibility>
            </toolkit_converters:DoubleToVisibilityConverter.TrueValue>
            <toolkit_converters:DoubleToVisibilityConverter.FalseValue>
                <xaml:Visibility>Collapsed</xaml:Visibility>
            </toolkit_converters:DoubleToVisibilityConverter.FalseValue>
            <toolkit_converters:DoubleToVisibilityConverter.NullValue>
                <xaml:Visibility>Collapsed</xaml:Visibility>
            </toolkit_converters:DoubleToVisibilityConverter.NullValue>
        </toolkit_converters:DoubleToVisibilityConverter>
    </UserControl.Resources>
    
    <Grid Background="{x:Bind Background}"
          BorderBrush="{x:Bind BorderBrush}"
          BorderThickness="{x:Bind BorderThickness}"
          CornerRadius="{x:Bind CornerRadius}">

        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Swap Chain -->
        <Border x:Name="RenderAreaBorder" Grid.Row="0" Grid.Column="0"
                BorderBrush="Transparent" BorderThickness="0" CornerRadius="0"
                PointerEntered="RenderAreaBorder_PointerEntered"
                PointerExited="RenderAreaBorder_PointerExited"
                PointerPressed="RenderAreaBorder_PointerPressed"
                PointerReleased="RenderAreaBorder_PointerReleased"
                PointerCaptureLost="RenderAreaBorder_PointerCaptureLost"
                PointerCanceled="RenderAreaBorder_PointerCanceled"
                PointerMoved="RenderAreaBorder_PointerMoved"
                PointerWheelChanged="RenderAreaBorder_PointerWheelChanged">
            <win2d:CanvasSwapChainPanel x:Name="SwapChainCanvas"
                                        MinWidth="320" MinHeight="240"
                                        SizeChanged="SwapChainCanvas_SizeChanged"/>
        </Border>

        <!-- Timeline -->
        <controls:MediaTimeline x:Name="Timeline" MinHeight="100"
                                Grid.Row="1" Grid.Column="0"
                                PositionFollowMode="Advance"
                                Visibility="{x:Bind ViewModel.ActiveMediaSource.Duration,
                                                    Converter={StaticResource GreaterThanZeroToVisibilityConverter},
                                                    Mode=OneWay}"/>
        
        <!-- Command Bar -->
        <CommandBar x:Name="EditorCommandBar" Grid.Row="2"
                    DefaultLabelPosition="Collapsed"
                    IsDynamicOverflowEnabled="False"
                    FlowDirection="RightToLeft"
                    Visibility="{x:Bind ViewModel.ActiveMediaSource,
                                        Converter={StaticResource ObjectToVisibilityConverter},
                                        Mode=OneWay}">
            <CommandBar.PrimaryCommands>
                <AppBarButton Width="40" Command="{x:Bind ViewModel.EditorCenterImageCommand}"/>
                <AppBarButton Width="40" Command="{x:Bind ViewModel.EditorImageZoomFullCommand}"/>
                <AppBarButton Width="40" Command="{x:Bind ViewModel.EditorImageZoomFitCommand}"/>
                <AppBarButton Width="40" Command="{x:Bind ViewModel.EditorTimelineZoomOutCommand}"/>
                <AppBarButton Width="40" Command="{x:Bind ViewModel.EditorTimelineZoomInCommand}"/>
                <AppBarSeparator/>
                <AppBarButton Width="40" Command="{x:Bind ViewModel.EditorPlaybackRateIncreaseCommand}"/>
                <AppBarButton Width="40" Command="{x:Bind ViewModel.EditorPlaybackRateNormalCommand}"/>
                <AppBarButton Width="40" Command="{x:Bind ViewModel.EditorPlaybackRateDecreaseCommand}"/>
                <AppBarSeparator/>
                <AppBarButton Width="40" Command="{x:Bind ViewModel.EditorCutSelectedCommand}"/>
                <AppBarButton Width="40" Command="{x:Bind ViewModel.EditorNewKeyframeCommand}"/>
                <AppBarButton Width="40" Command="{x:Bind ViewModel.EditorNewClipCommand}"/>
                <AppBarButton Width="40" Command="{x:Bind ViewModel.EditorNewMarkerCommand}"/>
                <AppBarToggleButton Width="40"
                                    Command="{x:Bind ViewModel.EditorToggleActiveSelectionCommand}"
                                    IsChecked="{x:Bind Timeline.IsSelectionEnabled, Mode=TwoWay}"/>
                <AppBarSeparator/>
                <AppBarButton Width="40" Command="{x:Bind ViewModel.EditorNextMarkerCommand}"/>
                <AppBarButton Width="40" Command="{x:Bind ViewModel.EditorPreviousMarkerCommand}"/>
                <AppBarButton Width="40" Command="{x:Bind ViewModel.EditorNextFrameCommand}"/>
                <AppBarButton Width="40" Command="{x:Bind ViewModel.EditorPreviousFrameCommand}"/>
                <AppBarButton Width="40" Command="{x:Bind ViewModel.EditorPauseCommand}"/>
                <AppBarButton Width="40" Command="{x:Bind ViewModel.EditorPlayCommand}"/>
            </CommandBar.PrimaryCommands>
        </CommandBar>
    </Grid>
</UserControl>